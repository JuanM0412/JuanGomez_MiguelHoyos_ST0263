syntax = "proto3";

package peer;

service PeerService {
  // Server
  rpc Register (RegisterRequest) returns (RegisterResponse);
  rpc Unregister (UnregisterRequest) returns (UnregisterResponse);
  rpc GetInternalTable (InternalTableRequest) returns (InternalTableResponse);
  rpc GetInterval (InternalTableRequest) returns (InternalTableResponse);
  
  // Peer
  rpc ReceiveOwnFile (File) returns (FileResponse);
  rpc ReceiveExternalFile (File) returns (FileResponse);
  rpc SendFile (File) returns (FileResponse);
}

message RegisterRequest {
  string ip = 1;
  string port = 2;
}

message RegisterResponse {
  int32 id = 1;
  int32 upper_bound = 2;
}

message UnregisterRequest {
  int32 id = 1;
}

message UnregisterResponse {
  string message = 1;
}

message InternalTableRequest {
  int32 id = 1;
}

message InternalTableResponse {
  repeated NodeInfo nodes = 1;
}

message NodeInfo {
  int32 id = 1;
  string ip = 2;
  string port = 3;
}

message File {
  string name = 1;
  int32 hash_value = 2;
}

message FileResponse {
  string status = 1;
  string message = 2;
  string file_name = 3;
}